version: "3.8"

x-django-service: &django-service
  build:
    context: .
    dockerfile: ./Dockerfile
  environment:
    CELERY_BROKER_URL: "pyamqp://django:django@rabbitmq/django"
    DATABASE_URL: "psql://django:django@dbpool/django"
    REDIS_URL: "redis://redis:6379/0"
  env_file:
    - .env
  depends_on:
    - db
    - redis
    - rabbitmq

x-django-volumes: &django-volumes
  volumes:
    - django-data:/app/var:ro
    - ./django:/app:ro
    - built-static:/app/static_built:ro

services:
  db:
    image: postgres:13.2-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data

  dbpool:
    image: edoburu/pgbouncer:1.11.0
    environment:
      DATABASE_URL: "postgres://django:django@db/django"
      POOL_MODE: "transaction"
    volumes:
      - ./pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
    logging:
      driver: none

  redis:
    image: redis:5.0.4-alpine3.9
    command: --maxmemory 200mb --maxmemory-policy allkeys-lru

  adminer:
    image: adminer:4.7.5
    ports:
      - 127.0.0.1:8080:8080

  rabbitmq:
    image: rabbitmq:3.8.9
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: django
      RABBITMQ_DEFAULT_PASS: django
      RABBITMQ_DEFAULT_VHOST: django

  django:
    <<: *django-service
    command: gunicorn
    volumes:
      - django-data:/app/var
      - ./django:/app
      - built-static:/app/static_built:ro
    ports:
      - 127.0.0.1:80:8000
    depends_on:
      - builder

  django-worker:
    <<: [*django-service, *django-volumes]
    command: celeryworker

  django-beat:
    <<: [*django-service, *django-volumes]
    command: celerybeat

  builder:
    build:
      context: .
      dockerfile: ./docker/builder.Dockerfile
    volumes:
      - built-static:/home/node/app/build
      - ./builder/src:/home/node/app/src:ro
      - ./builder/gulpfile.js:/home/node/app/gulpfile.js:ro

volumes:
  db-data:
  django-data:
  built-static:
